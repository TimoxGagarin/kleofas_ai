"""Add type and course_id for message

Revision ID: f4b8b9fe1add
Revises: 4d6bb8e6922d
Create Date: 2024-11-12 17:15:52.212501

"""

from typing import Sequence, Union

import sqlalchemy as sa
from alembic import op
from sqlalchemy.dialects.postgresql import ENUM

type_enum = ENUM("ai", "user", name="typeenum")

# revision identifiers, used by Alembic.
revision: str = "f4b8b9fe1add"
down_revision: Union[str, None] = "4d6bb8e6922d"
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    type_enum.create(op.get_bind(), checkfirst=True)
    op.add_column("messages", sa.Column("type", sa.Enum("AI", "USER", name="typeenum"), nullable=False))
    op.add_column("messages", sa.Column("course_id", sa.BigInteger(), nullable=False))
    op.create_foreign_key(None, "messages", "courses", ["course_id"], ["id"])
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_constraint(None, "messages", type_="foreignkey")
    op.drop_column("messages", "course_id")
    op.drop_column("messages", "type")
    type_enum.drop(op.get_bind(), checkfirst=True)
    # ### end Alembic commands ###
